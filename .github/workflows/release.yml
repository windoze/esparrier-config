name: Release

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-upload:
    name: Build and upload
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          # Linux
          - os: "ubuntu-22.04"
            target: "x86_64-unknown-linux-gnu"
            arch: "x86_64"
          - os: "ubuntu-22.04"
            target: "x86_64-unknown-linux-musl"
            arch: "x86_64"
          - os: "ubuntu-22.04"
            target: "aarch64-unknown-linux-gnu"
            arch: "arm64"
          - os: "ubuntu-22.04"
            target: "aarch64-unknown-linux-musl"
            arch: "arm64"
          # Windows
          - os: "windows-2022"
            target: "x86_64-pc-windows-msvc"
            arch: "x86_64"
          # macOs
          - os: "macos-13"
            target: "aarch64-apple-darwin"
            # This is not true, but simplifies the logic of the action.
            arch: "x86_64"
          - os: "macos-13"
            target: "x86_64-apple-darwin"
            arch: "x86_64"

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get the release version from the tag
        shell: bash
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          # Make Rust compile to our target (defined in the matrix)
          targets: ${{ matrix.target }}

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: false
          command: build
          args: --verbose --release --target ${{ matrix.target }}

      - name: Build archive
        shell: bash
        run: |
          # Replace with the name of your binary
          package_name="clip-sync"

          dirname="$package_name-${{ env.VERSION }}-${{ matrix.target }}"
          mkdir "$dirname"
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            mv "target/${{ matrix.target }}/release/esparrier-config-cli.exe" "$dirname"
          else
            mv "target/${{ matrix.target }}/release/esparrier-config-cli" "$dirname"
          fi

          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            7z a "$dirname.zip" "$dirname"
            echo "ASSET=$dirname.zip" >> $GITHUB_ENV
          else
            tar -czf "$dirname.tar.gz" "$dirname"
            echo "ASSET=$dirname.tar.gz" >> $GITHUB_ENV
          fi

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ env.ASSET }}
